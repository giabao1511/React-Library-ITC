upstream server_admin_api {
    least_conn;
    zone inventory_service 64k;

    server server_admin_api:5000 max_fails=2 fail_timeout=10s;

    keepalive 32;
    keepalive_timeout 20s;
    keepalive_requests 20;
    
}

upstream server_user_api {
    least_conn;
    zone inventory_service 64k;

    server server_user_api:5001 max_fails=2 fail_timeout=10s;

    keepalive 32;
    keepalive_timeout 20s;
    keepalive_requests 20;
    
}

upstream send_email_student {
    least_conn;
    zone inventory_service 64k;

    server send_email_student:5002 max_fails=2 fail_timeout=10s;

    keepalive 32;
    keepalive_timeout 20s;
    keepalive_requests 20;
    
}

upstream upload-api {
    least_conn;
    zone inventory_service 64k;

    server upload-api:8000 max_fails=2 fail_timeout=10s;

    keepalive 32;
    keepalive_timeout 20s;
    keepalive_requests 20;
    
}
server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    error_log  /var/log/nginx/error_log;

    location /manager {
        
        access_log /var/log/nginx/server_admin_api.log main;

        rewrite /api(.*) /$1 break;

        proxy_pass http://server_admin_api/api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header   Host $host;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_connect_timeout 300;

        error_log  /var/log/nginx/server_admin_api.error_log  warn;
    }
    location /student {
        set $orig_uri $uri$is_args$args;
        
        access_log /var/log/nginx/server_user_api.log main;

        rewrite /api(.*) /$1 break;

        proxy_pass http://server_user_api/api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header   Host $host;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header Host $http_host;
        # proxy_intercept_errors on;
        proxy_connect_timeout 300;

        error_log  /var/log/nginx/server_user_api.error_log  warn;
    }
    location /email {
        
        access_log /var/log/nginx/send_email_student.log main;

        proxy_pass http://send_email_student/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header   Host $host;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header Host $http_host;
        proxy_intercept_errors on;
        proxy_connect_timeout 300;

        error_log  /var/log/nginx/send_email_student.error_log  warn;
    }
    location /media {
            # Increase the client_max_body_size to avoid 413 Request Entity Too Large error
        client_max_body_size 100M;
        access_log /var/log/nginx/upload-api.log main;
        rewrite /api(.*) /$1 break;
        proxy_pass http://upload-api/api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header   Host $host;
        proxy_redirect     off;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header Host $http_host;
        proxy_connect_timeout 300;

        error_log  /var/log/nginx/upload-api.error_log  warn;
    }
    
    # error_page 404 /index.html;
    # location = /index.html {
    #     root /usr/share/nginx/html;
    #     internal;
    # }
    root /usr/share/nginx/html;

    error_page 404 /;
    location = / {
        try_files $uri /index.html;
        internal;
    }

    error_page 500 502 503 504 = /50x.html;

     location /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}